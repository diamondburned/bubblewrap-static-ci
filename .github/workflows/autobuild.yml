name: Automatically Build and Release Bubblewrap

on:
  schedule:
    - cron: '0 0 * * *'
  push:

jobs:
  update:
    name: Update Nixpkgs input
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - id: update
        run: |
          nix flake lock --update-input nixpkgs

      - id: check
        run: |
          needs_update=true
          flake_metadata="$(nix flake metadata --json | jq -c)"
          latest_version="v$(nix eval --raw .#default.version)"
          if [[ $(gh release view --json name --jq .name) == "$latest_version" ]]; then
            needs_update=false
          fi

          cat<<EOF > $GITHUB_OUTPUT
          needs_update=$needs_update
          flake_metadata=$flake_metadata
          latest_version=$latest_version
          EOF

      - id: commit
        if: steps.check.outputs.needs_update == 'true'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Automatically update Nixpkgs input
          file_pattern: flake.lock
    outputs:
      needs_update: ${{ steps.check.outputs.needs_update }}
      latest_version: ${{ steps.check.outputs.latest_version }}

  build:
    name: Build Bubblewrap statically
    needs: update
    if: needs.update.outputs.needs_update == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        system: [x86_64-linux, aarch64-linux]
    steps:
      - uses: actions/checkout@v4

      - uses: DeterminateSystems/nix-installer-action@main
      - uses: DeterminateSystems/magic-nix-cache-action@main

      - id: build
        run: |
          nix build ".#bubblewrap-${{ matrix.system }}"

      - id: pack
        run: |
          tar --zstd -cvf bubblewrap-${{ matrix.system }}.tar.zst -C result .

      - id: upload
        uses: actions/upload-artifact@v4
        with:
          name: bubblewrap-${{ matrix.system }}
          path: bubblewrap-${{ matrix.system }}.tar.zst

  release:
    name: Release Bubblewrap
    needs: [update, build]
    if: needs.update.outputs.needs_update == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - id: body
        env:
          FLAKE_METADATA: ${{ needs.update.outputs.flake_metadata }}
        run: |
          flake_inputs=$(
            echo "$FLAKE_METADATA" \
              | jq -r '
                  .locks.nodes | to_entries[] | select(.value.locked) | [
                    .key,
                    .value.locked.owner,
                    .value.locked.repo,
                    .value.locked.rev
                  ] | join(" ")' \
              | while read -r -d$'\n' input owner repo rev; do
                  echo "- $input: https://github.com/$owner/$repo/commit/$rev"
                done
          )

          cat<<EOF >> $GITHUB_OUTPUT
          flake-inputs=$(jq -n --arg str "$flake_inputs" '$str')
          EOF

      - uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.update.outputs.latest_version }}
          files: bubblewrap-*.tar.zst
          body: |
            # Bubblewrap ${{ needs.update.outputs.latest_version }}
          
            This build was automatically generated by GitHub Actions.
            It was built with the following Nix Flake inputs:
            ${{ steps.body.outputs.flake-inputs }}
